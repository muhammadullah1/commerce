{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/grid/index.tsx"],"sourcesContent":["import clsx from 'clsx';\n\nfunction Grid(props: React.ComponentProps<'ul'>) {\n  return (\n    <ul {...props} className={clsx('grid grid-flow-row gap-4', props.className)}>\n      {props.children}\n    </ul>\n  );\n}\n\nfunction GridItem(props: React.ComponentProps<'li'>) {\n  return (\n    <li {...props} className={clsx('aspect-square transition-opacity', props.className)}>\n      {props.children}\n    </li>\n  );\n}\n\nGrid.Item = GridItem;\n\nexport default Grid;\n"],"names":[],"mappings":";;;;;;;;AAEA,SAAS,KAAK,KAAiC;IAC7C,qBACE,8OAAC;QAAI,GAAG,KAAK;QAAE,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,4BAA4B,MAAM,SAAS;kBACvE,MAAM,QAAQ;;;;;;AAGrB;AAEA,SAAS,SAAS,KAAiC;IACjD,qBACE,8OAAC;QAAI,GAAG,KAAK;QAAE,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,oCAAoC,MAAM,SAAS;kBAC/E,MAAM,QAAQ;;;;;;AAGrB;AAEA,KAAK,IAAI,GAAG;uCAEG"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/label.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport Price from './price';\n\nconst Label = ({\n  title,\n  amount,\n  currencyCode,\n  position = 'bottom'\n}: {\n  title: string;\n  amount: string;\n  currencyCode: string;\n  position?: 'bottom' | 'center';\n}) => {\n  return (\n    <div\n      className={clsx('absolute bottom-0 left-0 flex w-full px-4 pb-4 @container/label', {\n        'lg:px-20 lg:pb-[35%]': position === 'center'\n      })}\n    >\n      <div className=\"flex items-center rounded-full border bg-white/70 p-1 text-xs font-semibold text-black backdrop-blur-md dark:border-neutral-800 dark:bg-black/70 dark:text-white\">\n        <h3 className=\"mr-4 line-clamp-2 flex-grow pl-2 leading-none tracking-tight\">{title}</h3>\n        <Price\n          className=\"flex-none rounded-full bg-blue-600 p-2 text-white\"\n          amount={amount}\n          currencyCode={currencyCode}\n          currencyCodeClassName=\"hidden @[275px]/label:inline\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Label;\n"],"names":[],"mappings":";;;;;;;;;;AAGA,MAAM,QAAQ,CAAC,EACb,KAAK,EACL,MAAM,EACN,YAAY,EACZ,WAAW,QAAQ,EAMpB;IACC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,mEAAmE;YACjF,wBAAwB,aAAa;QACvC;kBAEA,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAgE;;;;;;8BAC9E,8OAAC,oHAAA,CAAA,UAAK;oBACJ,WAAU;oBACV,QAAQ;oBACR,cAAc;oBACd,uBAAsB;;;;;;;;;;;;;;;;;AAKhC;uCAEe"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/grid/tile.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport Image from 'next/image';\nimport Label from '../label';\n\nexport function GridTileImage({\n  isInteractive = true,\n  active,\n  label,\n  ...props\n}: {\n  isInteractive?: boolean;\n  active?: boolean;\n  label?: {\n    title: string;\n    amount: string;\n    currencyCode: string;\n    position?: 'bottom' | 'center';\n  };\n} & React.ComponentProps<typeof Image>) {\n  return (\n    <div\n      className={clsx(\n        'group flex h-full w-full items-center justify-center overflow-hidden rounded-lg border bg-white hover:border-blue-600 dark:bg-black',\n        {\n          relative: label,\n          'border-2 border-blue-600': active,\n          'border-neutral-200 dark:border-neutral-800': !active\n        }\n      )}\n    >\n      {props.src ? (\n        <Image\n          className={clsx('relative h-full w-full object-contain', {\n            'transition duration-300 ease-in-out group-hover:scale-105': isInteractive\n          })}\n          {...props}\n        />\n      ) : null}\n      {label ? (\n        <Label\n          title={label.title}\n          amount={label.amount}\n          currencyCode={label.currencyCode}\n          position={label.position}\n        />\n      ) : null}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAIO,SAAS,cAAc,EAC5B,gBAAgB,IAAI,EACpB,MAAM,EACN,KAAK,EACL,GAAG,OAUiC;IACpC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EACZ,uIACA;YACE,UAAU;YACV,4BAA4B;YAC5B,8CAA8C,CAAC;QACjD;;YAGD,MAAM,GAAG,iBACR,8OAAC,6HAAA,CAAA,UAAK;gBACJ,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,yCAAyC;oBACvD,6DAA6D;gBAC/D;gBACC,GAAG,KAAK;;;;;uBAET;YACH,sBACC,8OAAC,oHAAA,CAAA,UAAK;gBACJ,OAAO,MAAM,KAAK;gBAClB,QAAQ,MAAM,MAAM;gBACpB,cAAc,MAAM,YAAY;gBAChC,UAAU,MAAM,QAAQ;;;;;uBAExB;;;;;;;AAGV"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/layout/product-grid-items.tsx"],"sourcesContent":["import Grid from 'components/grid';\nimport { GridTileImage } from 'components/grid/tile';\nimport { slugify } from 'lib/utils';\nimport Link from 'next/link';\nimport { Product } from 'types/product';\n\ninterface ProductGridItemsProps {\n  products: Product[];\n}\nexport default function ProductGridItems({ products }: ProductGridItemsProps) {\n  return (\n    <>\n      {products.map((product) => (\n        <Grid.Item key={product._id} className=\"animate-fadeIn\">\n          <Link\n            className=\"relative inline-block h-full w-full\"\n            href={`/product/${slugify(product._id)}`}\n            prefetch={true}\n          >\n            <GridTileImage\n              alt={product.title}\n              label={{\n                title: product.title,\n                amount: product.price.toString(),\n                currencyCode: 'USD'\n              }}\n              src={product.images[0] || ''}\n              fill\n              sizes=\"(min-width: 768px) 33vw, (min-width: 640px) 50vw, 100vw\"\n            />\n          </Link>\n        </Grid.Item>\n      ))}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AASe,SAAS,iBAAiB,EAAE,QAAQ,EAAyB;IAC1E,qBACE;kBACG,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC,4HAAA,CAAA,UAAI,CAAC,IAAI;gBAAmB,WAAU;0BACrC,cAAA,8OAAC,4HAAA,CAAA,UAAI;oBACH,WAAU;oBACV,MAAM,CAAC,SAAS,EAAE,CAAA,GAAA,4GAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,GAAG,EAAE,CAAC;oBACxC,UAAU;8BAEV,cAAA,8OAAC,2HAAA,CAAA,gBAAa;wBACZ,KAAK,QAAQ,KAAK;wBAClB,OAAO;4BACL,OAAO,QAAQ,KAAK;4BACpB,QAAQ,QAAQ,KAAK,CAAC,QAAQ;4BAC9B,cAAc;wBAChB;wBACA,KAAK,QAAQ,MAAM,CAAC,EAAE,IAAI;wBAC1B,IAAI;wBACJ,OAAM;;;;;;;;;;;eAfI,QAAQ,GAAG;;;;;;AAsBnC"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/store/useStore.ts"],"sourcesContent":["import { Product } from 'types/product';\nimport { create } from 'zustand';\n\ninterface StoreState {\n  products: Product[] | null;\n  fetchProducts: () => Promise<void>;\n  fetchProductDetail: (id: string) => Promise<void>;\n  productDetail: Product | null;\n}\n\nconst useStore = create<StoreState>((set) => ({\n  products: null,\n  productDetail: null,\n  fetchProducts: async () => {\n    const response = await fetch('http://localhost:5000/api/products');\n    const data = await response.json();\n    set({ products: data?.data });\n  },\n  fetchProductDetail: async (id: string) => {\n    const response = await fetch(`http://localhost:5000/api/products/${id}`);\n    const data = await response.json();\n    set({ productDetail: data?.data });\n  }\n}));\n\nexport default useStore;\n"],"names":[],"mappings":";;;;;;AAUA,MAAM,WAAW,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAc,CAAC,MAAQ,CAAC;QAC5C,UAAU;QACV,eAAe;QACf,eAAe;YACb,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI;gBAAE,UAAU,MAAM;YAAK;QAC7B;QACA,oBAAoB,OAAO;YACzB,MAAM,WAAW,MAAM,MAAM,CAAC,mCAAmC,EAAE,GAAG,CAAC;YACvE,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI;gBAAE,eAAe,MAAM;YAAK;QAClC;IACF,CAAC;uCAEc"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/components/product/product-container.tsx"],"sourcesContent":["'use client';\n\nimport Grid from 'components/grid';\nimport ProductGridItems from 'components/layout/product-grid-items';\nimport React from 'react';\nimport useStore from '../../store/useStore';\n\nexport default function ProductContainer() {\n  const { products, fetchProducts } = useStore();\n\n  React.useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  return (\n    <>\n      {products !== null && products.length > 0 ? (\n        <Grid className=\"grid-cols-1 sm:grid-cols-2 lg:grid-cols-4\">\n          <ProductGridItems products={products} />\n        </Grid>\n      ) : null}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,iHAAA,CAAA,UAAQ,AAAD;IAE3C,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd;IACF,GAAG,EAAE;IAEL,qBACE;kBACG,aAAa,QAAQ,SAAS,MAAM,GAAG,kBACtC,8OAAC,4HAAA,CAAA,UAAI;YAAC,WAAU;sBACd,cAAA,8OAAC,iJAAA,CAAA,UAAgB;gBAAC,UAAU;;;;;;;;;;mBAE5B;;AAGV"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}